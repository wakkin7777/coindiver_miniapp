<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Runic Alchemy</title>
    <script src="https://cdn.jsdelivr.net/npm/phaser@3.55.2/dist/phaser.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/three@0.170.0/build/three.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@farcade/game-sdk@0.2.1/dist/index.min.js"></script>
    <style>
      @import url("https://fonts.googleapis.com/css2?family=Cinzel:wght@400;600;700&family=Uncial+Antiqua&display=swap");

      html,
      body {
        margin: 0;
        padding: 0;
        background: linear-gradient(135deg, #1a0833 0%, #2d1b69 50%, #1a0833 100%);
        width: 100vw;
        height: 100vh;
        overflow: hidden;
        font-family: "Cinzel", serif;
        -webkit-user-select: none;
        -ms-user-select: none;
        user-select: none; /* Disable in-game text selection */
      }
      #game-container {
        width: 100vw;
        height: 100vh;
        position: relative;
        background: radial-gradient(circle at center, rgba(139, 69, 19, 0.1) 0%, rgba(25, 8, 51, 0.9) 100%);
        -webkit-user-select: none;
        -ms-user-select: none;
        user-select: none;
      }
      canvas {
        width: 100% !important;
        height: 100% !important;
        object-fit: fill !important;
      }
    </style>
  </head>
  <body>
    <div id="game-container"></div>
    <script>
      window.FarcadeSDK.on("play_again", () => {
        if (window.gameInstance) {
          if (window.gameInstance.scene.isActive("GameScene")) {
            window.gameInstance.scene.stop("GameScene");
          }
          window.gameInstance.scene.start("TitleScene");
        }
      });

      class TitleScene extends Phaser.Scene {
        constructor() {
          super({ key: "TitleScene" });
          this.ingredientIcons = [];
        }

        preload() {
          // Title logo
          this.load.image(
            "hurryLogo",
            "https://lqy3lriiybxcejon.public.blob.vercel-storage.com/51b97866-ced4-4f48-9c47-c5950616decd/hurry_logo-FfLFGyqhMDdL1917SwsGAwrRI6eERV.png?RnhZ",
          );

          // Wizard character
          this.load.image(
            "wizard",
            "https://lqy3lriiybxcejon.public.blob.vercel-storage.com/51b97866-ced4-4f48-9c47-c5950616decd/Wizzy_purple-hCtK0iNRLatXlF4h8SLb7Z5zCbX4H1.png?p8zx",
          );

          // Alchemy ingredients - updated URLs
          this.load.image(
            "rainbow",
            "https://lqy3lriiybxcejon.public.blob.vercel-storage.com/51b97866-ced4-4f48-9c47-c5950616decd/top-o5r9gRgKhgTGZTECbl2i00MA1VBy2E.png?456L",
          );
          this.load.image(
            "thunderEssence",
            "https://lqy3lriiybxcejon.public.blob.vercel-storage.com/51b97866-ced4-4f48-9c47-c5950616decd/bottle_bolt-eD710ihPlHRWNz7rCWa2M1RIceGykC.png?RAIq",
          );
          this.load.image(
            "fireEssence",
            "https://lqy3lriiybxcejon.public.blob.vercel-storage.com/51b97866-ced4-4f48-9c47-c5950616decd/bottle_fire-qDlVroAiHpBOg0i0OtbEJQpz12Q1W0.png?topc",
          );
          this.load.image(
            "waterEssence",
            "https://lqy3lriiybxcejon.public.blob.vercel-storage.com/51b97866-ced4-4f48-9c47-c5950616decd/bottle_water-dVAJ2Hjyg1sPyiQSk34F3gS4ixCT2E.png?6sZS",
          );
          this.load.image(
            "ratTail",
            "https://lqy3lriiybxcejon.public.blob.vercel-storage.com/51b97866-ced4-4f48-9c47-c5950616decd/deadrat-DLchJbQF6L80AOkwfdPKsb7SLpqoTK.png?cdag",
          );

          // Customers - all using the same wizard image
          this.load.image(
            "customer00",
            "https://lqy3lriiybxcejon.public.blob.vercel-storage.com/51b97866-ced4-4f48-9c47-c5950616decd/Wizzy_purple-hCtK0iNRLatXlF4h8SLb7Z5zCbX4H1.png?p8zx",
          );
          this.load.image(
            "customer01",
            "https://lqy3lriiybxcejon.public.blob.vercel-storage.com/51b97866-ced4-4f48-9c47-c5950616decd/Wizzy_purple-hCtK0iNRLatXlF4h8SLb7Z5zCbX4H1.png?p8zx",
          );
          this.load.image(
            "customer02",
            "https://lqy3lriiybxcejon.public.blob.vercel-storage.com/51b97866-ced4-4f48-9c47-c5950616decd/Wizzy_purple-hCtK0iNRLatXlF4h8SLb7Z5zCbX4H1.png?p8zx",
          );
          this.load.image(
            "customer03",
            "https://lqy3lriiybxcejon.public.blob.vercel-storage.com/51b97866-ced4-4f48-9c47-c5950616decd/Wizzy_purple-hCtK0iNRLatXlF4h8SLb7Z5zCbX4H1.png?p8zx",
          );

          // Reuse some background assets
          this.load.image(
            "backgroundImage",
            "https://lqy3lriiybxcejon.public.blob.vercel-storage.com/51b97866-ced4-4f48-9c47-c5950616decd/BASE_wiz-cp7bDQW8qHwbI4KuhbMTmV5Wy1LVVN.png?UGzi",
          );

          // Complete images - 4 color variations for sparkling effect
          this.load.image(
            "complete01",
            "https://lqy3lriiybxcejon.public.blob.vercel-storage.com/51b97866-ced4-4f48-9c47-c5950616decd/complete01-kiqlVC5wBDUqJYpfcwmRFbKSpT4ESl.png?5DAO",
          );
          this.load.image(
            "complete02",
            "https://lqy3lriiybxcejon.public.blob.vercel-storage.com/51b97866-ced4-4f48-9c47-c5950616decd/complete02-80N6CD2oH5bSmWkfq7VlQVg6dTZdXp.png?ghXn",
          );
          this.load.image(
            "complete03",
            "https://lqy3lriiybxcejon.public.blob.vercel-storage.com/51b97866-ced4-4f48-9c47-c5950616decd/complete03-dwr5me8G4x8nfOK78CDToSMFUTWbZa.png?wGnq",
          );
          this.load.image(
            "complete04",
            "https://lqy3lriiybxcejon.public.blob.vercel-storage.com/51b97866-ced4-4f48-9c47-c5950616decd/complete04-YLOu1oMxVweYVLLYJLoFbQfqDTXltM.png?Ln5r",
          );

          // Audio
          this.load.audio(
            "collectSound",
            "https://lqy3lriiybxcejon.public.blob.vercel-storage.com/kYTGyVr8TG03/get-i1cu5w0mD3gpxNbDW9egTdMvVDVGxg.mp3?weXs",
          );
          this.load.audio(
            "successSound",
            "https://lqy3lriiybxcejon.public.blob.vercel-storage.com/51b97866-ced4-4f48-9c47-c5950616decd/potion-sgtsq9UI2leD4H78mNSsdfLQ78T2Qx.mp3?jkqi",
          );
          this.load.audio(
            "entrySound",
            "https://lqy3lriiybxcejon.public.blob.vercel-storage.com/f904c81e-9b0e-4f33-b6de-7d539ddc6c57/mouse-LC5veCF93XlkKbTYZr1nCiAqJeWvtd.mp3?BVB0",
          );

          // Button click sound
          this.load.audio(
            "buttonSound",
            "https://lqy3lriiybxcejon.public.blob.vercel-storage.com/51b97866-ced4-4f48-9c47-c5950616decd/MAGICPOWER-IOXpWWgtYm3yEcSiW9lwhFjfPqGyKY.mp3?eu34",
          );

          // Check mark for completed ingredients
          this.load.image(
            "checkMark",
            "https://lqy3lriiybxcejon.public.blob.vercel-storage.com/51b97866-ced4-4f48-9c47-c5950616decd/check-lrA8lVivNgsd2MeWOFIYtGGcggN3Bf.png?26Wq",
          );

          // BEGIN button images - 4 color variations for sparkling effect
          this.load.image(
            "begin01",
            "https://lqy3lriiybxcejon.public.blob.vercel-storage.com/51b97866-ced4-4f48-9c47-c5950616decd/BEGIN01-qXkgcGdS4S9MH03XG8q57L4fQrk3gr.png?Oi2v",
          );
          this.load.image(
            "begin02",
            "https://lqy3lriiybxcejon.public.blob.vercel-storage.com/51b97866-ced4-4f48-9c47-c5950616decd/BEGIN02-ZyINcObsL8V9GBHG9aOKgyvDMQ8rNt.png?XR7L",
          );
          this.load.image(
            "begin03",
            "https://lqy3lriiybxcejon.public.blob.vercel-storage.com/51b97866-ced4-4f48-9c47-c5950616decd/BEGIN03-Cm5KhyayNGS2edyS4TnS7iipNxDwTT.png?pGxX",
          );
          this.load.image(
            "begin04",
            "https://lqy3lriiybxcejon.public.blob.vercel-storage.com/51b97866-ced4-4f48-9c47-c5950616decd/BEGIN04-x7ygvsIpxB29i6uResL1nyQ5VaJxGR.png?6hZF",
          );

          // OPEN button images - 4 color variations for sparkling effect
          this.load.image(
            "open01",
            "https://lqy3lriiybxcejon.public.blob.vercel-storage.com/51b97866-ced4-4f48-9c47-c5950616decd/OPEN01-W2teJL61sQtW4UE2l38lSja4f2Pkyw.png?je95",
          );
          this.load.image(
            "open02",
            "https://lqy3lriiybxcejon.public.blob.vercel-storage.com/51b97866-ced4-4f48-9c47-c5950616decd/OPEN02-0E6HbgoHqsNgsppnCjp4ytz36Zuoe6.png?jyBW",
          );
          this.load.image(
            "open03",
            "https://lqy3lriiybxcejon.public.blob.vercel-storage.com/51b97866-ced4-4f48-9c47-c5950616decd/OPEN03-8aeJlHUiPzRMFgL6bvruJN2yLk0ZwX.png?bA5T",
          );
          this.load.image(
            "open04",
            "https://lqy3lriiybxcejon.public.blob.vercel-storage.com/51b97866-ced4-4f48-9c47-c5950616decd/OPEN04-3i0ElBQSjKHiBH7fZcf8FK4CFICdp8.png?1AZd",
          );
        }

        create() {
          // Background with magical atmosphere
          const bg = this.add.rectangle(360, 640, 720, 1280, 0x1a0833, 1);

          // Add mystical particles
          this.createMysticalParticles();

          window.FarcadeSDK.on("toggle_mute", (data) => {
            if (typeof data.isMuted === "boolean") {
              this.sound.mute = data.isMuted;
            }
          });

          // Button sound setup
          this.buttonSound = this.sound.add("buttonSound");

          // Main title with logo image (80% size, moved down even more)
          const titleLogo = this.add.image(360, 350, "hurryLogo").setOrigin(0.5).setScale(0.64); // Moved from 280 to 350

          // Animate title with magical glow
          this.tweens.add({
            targets: titleLogo,
            alpha: { from: 0, to: 1 },
            scale: { from: 0.48, to: 0.64 }, // Adjusted for new scale
            duration: 1500,
            ease: "Power2.Out",
          });

          this.time.delayedCall(1000, () => {
            this.tweens.add({
              targets: titleLogo,
              alpha: { from: 1, to: 0.7 },
              duration: 2000,
              yoyo: true,
              repeat: -1,
              ease: "Sine.easeInOut",
            });
          });

          // Instructions with mystical styling (moved down even further)
          const instruction1 = this.add
            .text(360, 690, "Gather all mystical ingredients shown", {
              fontFamily: "Cinzel, serif",
              fontSize: "24px",
              fill: "#e6d7ff",
              align: "center",
              wordWrap: { width: 600 },
              shadow: {
                offsetX: 1,
                offsetY: 1,
                color: "#000000",
                blur: 2,
                fill: true,
              },
            })
            .setOrigin(0.5);

          const instruction2 = this.add
            .text(360, 740, "to brew powerful potions for your clients!", {
              fontFamily: "Cinzel, serif",
              fontSize: "24px",
              fill: "#e6d7ff",
              align: "center",
              wordWrap: { width: 600 },
              shadow: {
                offsetX: 1,
                offsetY: 1,
                color: "#000000",
                blur: 2,
                fill: true,
              },
            })
            .setOrigin(0.5);

          [instruction1, instruction2].forEach((text, index) => {
            text.setAlpha(0);
            this.tweens.add({
              targets: text,
              alpha: 1,
              duration: 1000,
              delay: 500 + index * 200,
              ease: "Power1",
            });
          });

          // Mystical start button (moved down even further) - now with sparkling images
          const startButton = this.createSparklingButton(360, 890, "begin", () => {
            this.buttonSound.play();
            this.scene.start("GameScene");
          });

          // Display ingredient icons at bottom (moved down even further)
          const ingredientsToDisplay = ["fireEssence", "waterEssence", "thunderEssence"];
          const spacing = 150; // Increased spacing for better center alignment
          const startX = 360 - (spacing * (ingredientsToDisplay.length - 1)) / 2; // Center alignment
          const yPosition = 1090; // Moved down from 1020

          ingredientsToDisplay.forEach((ing, index) => {
            let icon = this.add.image(startX + index * spacing, yPosition, ing).setScale(6.24); // 4.8 * 1.3 = 6.24
            this.ingredientIcons.push(icon);

            // Add magical shimmer effect
            this.time.delayedCall(index * 200, () => {
              this.tweens.add({
                targets: icon,
                alpha: { from: 0.7, to: 1 },
                scale: { from: 6.24, to: 7.28 }, // 5.6 * 1.3 = 7.28
                duration: 800,
                yoyo: true,
                repeat: -1,
                ease: "Sine.easeInOut",
              });
            });
          });

          window.FarcadeSDK.singlePlayer.actions.ready();
        }

        createMysticalParticles() {
          for (let i = 0; i < 20; i++) {
            const particle = this.add.circle(
              Phaser.Math.Between(0, 720),
              Phaser.Math.Between(0, 1280),
              Phaser.Math.Between(1, 3),
              0xe6b800,
              0.6,
            );

            this.tweens.add({
              targets: particle,
              alpha: { from: 0.6, to: 0.1 },
              scale: { from: 1, to: 0.3 },
              duration: Phaser.Math.Between(2000, 4000),
              yoyo: true,
              repeat: -1,
              delay: Phaser.Math.Between(0, 2000),
            });
          }
        }

        createMysticalButton(x, y, text, callback) {
          const buttonBg = this.add.rectangle(x, y, 300, 60, 0x4a0e4e, 1);
          buttonBg.setStrokeStyle(2, 0xe6b800);

          const buttonText = this.add
            .text(x, y, text, {
              fontFamily: "Cinzel, serif",
              fontSize: "24px",
              fill: "#e6b800",
              fontStyle: "bold",
            })
            .setOrigin(0.5);

          buttonBg.setInteractive();
          buttonBg.on("pointerdown", callback);
          buttonBg.on("pointerover", () => {
            buttonBg.setFillStyle(0x6b1470);
            this.tweens.add({
              targets: buttonText,
              scale: 1.1,
              duration: 100,
            });
          });
          buttonBg.on("pointerout", () => {
            buttonBg.setFillStyle(0x4a0e4e);
            this.tweens.add({
              targets: buttonText,
              scale: 1.0,
              duration: 100,
            });
          });

          return { bg: buttonBg, text: buttonText };
        }

        createSparklingButton(x, y, imagePrefix, callback) {
          // Create sparkling button with color cycling
          const buttonImages = [`${imagePrefix}01`, `${imagePrefix}02`, `${imagePrefix}03`, `${imagePrefix}04`];
          let currentImageIndex = 0;

          // Different scales for different buttons
          const scale = imagePrefix === "open" ? 0.64 : 0.8; // 80% for OPEN, keep BEGIN at 0.8

          const buttonImage = this.add.image(x, y, buttonImages[0]).setOrigin(0.5).setScale(scale).setInteractive();

          // Color cycling animation for sparkling effect
          const colorCycleTimer = this.time.addEvent({
            delay: 200, // Change color every 200ms
            callback: () => {
              currentImageIndex = (currentImageIndex + 1) % buttonImages.length;
              buttonImage.setTexture(buttonImages[currentImageIndex]);
            },
            loop: true,
          });

          // Button interactions
          buttonImage.on("pointerdown", () => {
            callback();
          });

          buttonImage.on("pointerover", () => {
            this.tweens.add({
              targets: buttonImage,
              scale: scale + 0.05,
              duration: 100,
            });
          });

          buttonImage.on("pointerout", () => {
            this.tweens.add({
              targets: buttonImage,
              scale: scale,
              duration: 100,
            });
          });

          return { image: buttonImage, timer: colorCycleTimer };
        }
      }

      class GameScene extends Phaser.Scene {
        constructor() {
          super({ key: "GameScene" });
          this.countdownText = null;
          this.previousCustomerKey = null;
          this.skipSoundOnRestart = false;
        }

        init(data) {
          this.startImmediately = data?.startImmediately || false;

          this.skipSoundOnRestart = data?.skipSound || false;
          this.potionsBrewed = 0;
          this.gameStarted = false;
          this.isGameOver = false;
          this.brewedPotion = [];
          this.requiredIngredients = []; // Track what ingredients are needed
          this.isProcessingSuccess = false;
          this.isCollecting = false; // Add flag to prevent double collection
          this.playableAreaTop = 280;

          this.ingredientGroup = null;
          this.brewedPotionIcons = null;
          this.orderIcons = [];

          this.timeLeft = 60;
          this.characterSpeed = 332;
        }
